Variables :
IF ELSE PLUS MINUS TIMES POW DIVIDED MOD EQUALS RETURN BRACE1 BRACE2 KURAWAL1 KURAWAL2 GT LT SERU DOT COMMA COLON SEMICOLON PETIK1 PETIK2 STRING BOOL NEW TRUE FALSE BREAK CONST SWITCH CASE DEFAULT TRY CATCH FINALLY THROW LET VAR CONTINUE DELETE FOR FUNCTION NULL WHILE DO
Productions;
SS -> SS SS | IF | WHILE | FOR | CLASS | IMPORT | FUNCTION | THROW | COMMENT | BREAK | CONTINUE | WITH | VAR EQUAL VV | VAR OP EQUAL VV | NULL | ARRAY | DICT | STRING | BOOLEAN | NUMBER | TRY | SWITCH | DELETE | DEFAULT; 
IF -> if;
ELSE -> else;
PLUS -> +;
MINUS -> -;
TIMES -> *;
POW -> **;
DIVIDED -> /;
MOD -> %;
EQUAL_TO -> ==;
EQUALS -> =;
RETURN -> return;
BRACE1 -> (;
BRACE2 -> );
SQUARE1 -> [;
SQUARE2 -> ];
KURAWAL1 -> {;
KURAWAL2 -> };
UNDERSCORE -> _;
GT -> >;
LT -> <;
SERU -> !;
DOT -> .;
COMMA -> ,;
COLON -> :;
SEMICOLON -> ;;
HASHTAG -> #;
PETIK1 -> ';
PETIK2 -> ";
STR -> String;
BOOL -> Boolean;
AND -> &&;
OR -> ||;
NEW -> new;
TRUE -> true;
FALSE -> false;
BREAK -> break;
CONST -> const;
SWITCH -> switch;
CASE -> case;
DEFAULT -> default;
TRY -> try;
CATCH -> catch;
FINALLY -> finally;
THROW -> throw;
LET -> let;
VAR -> var;
CONTINUE -> continue;
DELETE -> delete;
FOR -> for;
FUNC -> function;
NULL -> null;
WHILE -> while;
CLASS -> class;
FROM -> from;
IMPORT -> import;
DO -> do;
ALPHABET ->  a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z;
NUM -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
OTHER -> ~ | ` | @ | $ | ^ | & | \ | ? | SERU | HASHTAG | MOD | BRACE1 | BRACE2 | TIMES | PLUS | MINUS | COMMA | DIVIDED | COLON | LT | EQUALS | GT | SQUARE1 | SQUARE2 | UNDERSCORE | KURAWAL1 | KURAWAL2 | DOT |;
OP -> PLUS | MINUS | TIMES | DIVIDED | MOD | POW.
NUMBER -> NUMBER NUMBER | NUM;
SYNTAX -> NULL | AND | OR | TRUE | FALSE | SERU | FOR | IF | ELSE | WHILE | BREAK | CONTINUE | FUNC | RETURN | THROW | CLASS | FROM | IMPORT;
NL -> NL NL | newline;
KATA -> KATA KATA | ALPHABET | NUM | OTHER;                 belum selesai
VAR_2 -> VAR_2 VAR_2 | ALPHABET | NUM;
VAR -> ALPHABET | ALPHABET VAR_2;
VALUE -> NUMBER | BOOLEAN | KATA;                           belom
VV -> VV COMMA VV | VAR | VALUE;
COMPARE -> GT | LT | GT EQUALS | LT EQUALS | EQUALS EQUALS | SERU EQUALS;
BOOLEAN ->  BOOLEAN AND BOOLEAN | BOOLEAN OR BOOLEAN | TRUE | FALSE | SERU BOOLEAN | VALUE COMPARE VALUE;
FUNCTION -> VAR BRACE1 VV BRACE2 | VAR BRACE1 BRACE2;
STRING -> STRING STRING | PETIK1 KATA PETIK1 | PETIK2 KATA PETIK2;
CODE ->  IF_SYNTAX | WHILE_SYNTAX | FOR | CLASS | FUNC | FUNCTION | BREAK SEMICOLON | CONTINUE | STRING | BOOLEAN | NUMBER;
BODY -> CODE SEMICOLON | CODE SEMICOLON NL | CODE NL | BODY BODY
IFF -> IF BRACE1 BOOLEAN BRACE2;
IF_SYNTAX -> IFF KURAWAL1 BODY KURAWAL2 | IF_SYNTAX ELIF_SYNTAX | IF_SYNTAX ELSE_SYNTAX | IFF BREAK SEMICOLON | IFF CONTINUE;
ELIFF -> ELSE IF BRACE1 BOOLEAN BRACE2;
ELIF_SYNTAX -> ELIFF KURAWAL1 BODY KURAWAL2 | ELIF_SYNTAX ELIF_SYNTAX | ELIF_SYNTAX ELSE_SYNTAX | ELIFF BREAK SEMICOLON | ELIFF CONTINUE;
ELSE_SYNTAX -> ELSE KURAWAL1 BODY KURAWAL2 | ELSE KURAWAL1 BREAK KURAWAL2 | ELSE KURAWAL1 CONTINUE KURAWAL2;
WHILES -> WHILE BRACE1 BOOLEAN BRACE2;
WHILE_SYNTAX -> WHILES KURAWAL1 BODY KURAWAL2;
ARRAY -> SQUARE1 VV SQUARE2;
CONST_SYNTAX -> CONST VAR EQUALS VALUE SEMICOLON;
